import functools
class Solution(object):
    def countSubIslands(self, grid1, grid2):
        m = len(grid1)
        n = len(grid1[0])
        dirs = [[0,1],[1,0],[0,-1],[-1,0]]
        def isValid(x,y):
            return x >=0 and x <m and y >=0 and y<n
        def dfs(i,j):
            grid2[i][j]=0
            res =[True] *4
            for k in range(4):
                a,b = dirs[k]
                if isValid(a+i,b+j) and grid2[a+i][b+j] ==1:
                    res[k] = dfs(a+i,b+j)
            if grid1[i][j] ==0:
                return False
            return functools.reduce(lambda a,b : a and b ,res)
        cnt =0
        for i in range(m):
            for j in range(n):
                if grid2[i][j] ==1:
                    cnt += int(dfs(i,j))
        return cnt      

grid1 = [[1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1],[1,0,1,0,1,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1],[1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,1,1],[0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1],[0,0,1,1,1,0,1,1,0,1,1,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1],[1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,0,1,1],[0,0,1,1,1,0,1,1,1,1,0,1,0,1,0,0,0,0,0,1,0,0,1,0,0,1,1,1,1,1,0,1],[1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,0,1,0,1,0,1],[1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,0],[0,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,0],[0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],[1,1,1,1,0,0,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,1,1,0,1,0,0,1,1,1,0,1],[1,0,0,1,1,1,0,1,1,1,1,1,0,0,0,1,0,1,1,0,1,1,1,1,1,1,0,1,0,0,1,1]]


grid2 =[[1,0,1,1,0,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1],[0,1,1,0,1,1,0,1,0,1,1,1,0,1,0,1,0,0,1,1,0,1,0,0,1,0,1,1,1,1,1,1],[1,1,1,0,1,0,0,1,1,0,1,1,0,1,0,1,1,0,0,0,1,0,1,1,0,0,1,0,0,0,0,1],[0,1,1,1,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,1,0,0],[1,1,0,1,1,1,1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,1,0,0,1,0,1,0,1,1,1,0],[0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,0,0,1,1,0,1,0,1,1,0,0,1,0,1,0,0],[1,1,0,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1],[0,1,1,0,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,0],[0,1,1,0,1,1,0,0,0,1,0,0,1,0,0,1,1,1,1,1,1,0,0,0,1,1,0,0,1,1,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,0,1,1,0,0,1,0,0],[1,1,0,1,0,1,1,1,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0],[1,1,0,0,1,0,0,1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,0,0,1,1,1,0],[0,1,1,1,1,0,1,0,1,0,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,1,0,0,1],[1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,0,1,1,0,1,1,1],[1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,0,0,1,1,1,0,0,1,0,1,1]]


re =Solution().countSubIslands(grid1,grid2)
print(re)
            