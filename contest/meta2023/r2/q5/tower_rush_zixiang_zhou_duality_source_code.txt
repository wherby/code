#define DEBUG 0

#include <bits/stdc++.h>
using namespace std;

#if DEBUG
// basic debugging macros
int __i__,__j__;
#define printLine(l) for(__i__=0;__i__<l;__i__++){cout<<"-";}cout<<endl
#define printLine2(l,c) for(__i__=0;__i__<l;__i__++){cout<<c;}cout<<endl
#define printVar(n) cout<<#n<<": "<<n<<endl
#define printArr(a,l) cout<<#a<<": ";for(__i__=0;__i__<l;__i__++){cout<<a[__i__]<<" ";}cout<<endl
#define print2dArr(a,r,c) cout<<#a<<":\n";for(__i__=0;__i__<r;__i__++){for(__j__=0;__j__<c;__j__++){cout<<a[__i__][__j__]<<" ";}cout<<endl;}
#define print2dArr2(a,r,c,l) cout<<#a<<":\n";for(__i__=0;__i__<r;__i__++){for(__j__=0;__j__<c;__j__++){cout<<setw(l)<<setfill(' ')<<a[__i__][__j__]<<" ";}cout<<endl;}

// advanced debugging class
// debug 1,2,'A',"test";
class _Debug {
    public:
        template<typename T>
        _Debug& operator,(T val) {
            cout << val << endl;
            return *this;
        }
};
#define debug _Debug(),
#else
#define printLine(l)
#define printLine2(l,c)
#define printVar(n)
#define printArr(a,l)
#define print2dArr(a,r,c)
#define print2dArr2(a,r,c,l)
#define debug
#endif

// define
#define MAX_VAL 999999999
#define MAX_VAL_2 999999999999999999LL
#define EPS 1e-6
#define mp make_pair
#define pb push_back

// typedef
typedef unsigned int UI;
typedef long long int LLI;
typedef unsigned long long int ULLI;
typedef unsigned short int US;
typedef pair<int,int> pii;
typedef pair<LLI,LLI> plli;
typedef vector<int> vi;
typedef vector<LLI> vlli;
typedef vector<pii> vpii;
typedef vector<plli> vplli;

// ---------- END OF TEMPLATE ----------
#define MOD 1000000007

int inv(int n) {
    int e = MOD-2,r = 1;
    while (e > 0) {
        if (e & 1) r = ((LLI) r*n) % MOD;
        e >>= 1;
        n = ((LLI) n*n) % MOD;
    }
    return r;
}
vi divs[1000001];
int H[1000000];
int num[1000001],conv[1000001],deconv[1000001];
int main() {
    int i,j;
    for (i = 1; i <= 1000000; i++) {
        for (j = i; j <= 1000000; j += i) divs[j].pb(i);
    }
    int t,T;
    int N,K,D;
    scanf("%d",&T);
    for (t = 1; t <= T; t++) {
        scanf("%d %d %d",&N,&K,&D);
        cerr<<t<<":"<<N<<endl;
        for (i = 0; i < N; i++) scanf("%d",&H[i]);

        memset(num,0,sizeof(num));
        for (i = 0; i < N; i++) {
            for (int v: divs[H[i]]) num[v]++;
        }
        for (i = 1; i <= 1000000; i++) {
            int u = 1;
            for (j = 0; j < K; j++) u = ((LLI) u*(num[i]-j)) % MOD;
            conv[i] = u;
        }
        for (i = 1000000; i >= 1; i--) {
            deconv[i] = conv[i];
            for (j = 2*i; j <= 1000000; j += i) {
                deconv[i] -= deconv[j];
                if (deconv[i] < 0) deconv[i] += MOD;
            }
        }
        int ans = 0;
        for (i = 1; i <= D; i++) {
            if ((D % i) == 0) ans = (ans+deconv[i]) % MOD;
        }
        printf("Case #%d: %d\n",t,ans);
    }
    
    return 0;
}

