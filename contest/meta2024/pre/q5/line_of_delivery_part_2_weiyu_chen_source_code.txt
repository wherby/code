#include<bits/stdc++.h>
#define SZ(x) ((int)x.size())
#define FOR(i,a,b) for (int i=a;i<=b;++i)
#define FORD(i,a,b) for (int i=a;i>=b;--i)
using namespace std;

int n,g,a[2000010],b[2000010],ans,rp;
int lowbit(int x){
    return (x & -x);
}
struct BIT{
    int shift, n;
    int bit[2000010];
    BIT(int _s, int _n){shift=_s;n=_n;memset(bit,0,sizeof(bit));}
    void clear(){memset(bit,0,sizeof(bit));}
    void add(int x,int t){
        x+=shift;
        for (;x<=n;x+=lowbit(x))
            bit[x]+=t;
    }
    int sum(int x){
        x+=shift;
        int s=0;
        for (;x;x-=lowbit(x))
            s+=bit[x];
        return s;
    }
};
BIT A(0, 2000000);

void doit(){
    scanf("%d%d",&n,&g);
    // A.clear();
    // FOR(i,1,n){
    //     int x;
    //     scanf("%d",&x);
    //     int t = A.sum(x+i-2);
    //     A.add(x+t+i-1-t, 1);
    //     b[i]=x+t+i-1-t;
    // }
    FOR(i,1,n){
        scanf("%d",&b[i]);
        b[i]+=i-1;
    }
    sort(b+1,b+n+1);
    FOR(i,1,n) a[i]=b[i]-(n-i);

    int r = upper_bound(a+1,a+n+1,g)-a;
    if (r==1)
        ans = 1;
    else if (r>n)
        ans = n;
    else{
        if (a[r]-g <= g-a[r-1])
            ans = r;
        else
            ans = r-1;
    }
    printf("Case #%d: %d %d\n",rp, n-ans+1, abs(a[ans]-g));
}
int main(){
    freopen("line_of_delivery_part_2_input.txt","r",stdin);
    freopen("t.out","w",stdout);
    int T;
    scanf("%d",&T);
    for (rp=1;rp<=T;++rp) doit();
    return 0;
}