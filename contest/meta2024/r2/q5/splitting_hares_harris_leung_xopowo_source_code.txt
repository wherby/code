#include<bits/stdc++.h>
using namespace std;
#define fi first
#define se second
typedef long long ll;
int n;
int a[305],w[305];
vector<int>guy[305];
int gl[305],gr[305];

int dp[305][505];
int prv[305][505];
vector<int>method[305][505];
set<int>use;
void test2(int i,vector<int>ww){
	if(ww[0]<=0) return;
	if(i==1){
		dp[i][ww[1]]=0;
		method[i][ww[1]]=ww;
		return;
	}
	for(auto c:use){
		if(c>=ww[0]) break;
		if(dp[i-1][c]>ww[0]-c) continue;
		int w1=dp[i-1][c]+ww[1]-ww[0];
		int w2=ww[0]-c;
		int frog=max(0,w1-w2);
		if(dp[i][ww[1]]>frog){
			dp[i][ww[1]]=frog;
			method[i][ww[1]]=ww;
			prv[i][ww[1]]=c;
		}
	}
}
void test3(int i,vector<int>ww){
	if(ww[0]<=0) return;
	if(i==1){
		dp[i][ww[2]]=ww[2]-ww[1];
		method[i][ww[2]]=ww;
		return;
	}
	for(auto c:use){
		if(c>=ww[0]) break;
		if(dp[i-1][c]+ww[1]-ww[0]>ww[0]-c) continue;
		int w1=dp[i-1][c];
		int w2=ww[0]-c;
		int frog=max(ww[2]-ww[1],w1-w2);
		if(dp[i][ww[2]]>frog){
			dp[i][ww[2]]=frog;
			method[i][ww[2]]=ww;
			prv[i][ww[2]]=c;
		}
	}
}
void funny(int i,vector<int>ww){
	if(ww[1]==ww[0]+1) return;
	if(i==1){
		test3(i,{ww[0],ww[1]-1,ww[1]});
		return;
	}
	for(auto c:use){
		if(c>=ww[0]) break;
		int costa=dp[i-1][c];
		int costb=ww[0]-c;
		int ww3=ww[0]+min(costb-costa,ww[1]-ww[0]-1);
		if(ww3<=ww[0]) continue;
		int frog=ww[1]-ww3;
		if(dp[i][ww[1]]>frog){
			dp[i][ww[1]]=frog;
			method[i][ww[1]]={ww[0],ww3,ww[1]};
			prv[i][ww[1]]=c;
		}
	}
}
void solve(int rr){
	cin >> n;
	for(int i=1; i<=n ;i++) guy[i].clear();
	for(int i=1; i<=n ;i++){
		cin >> w[i];
	}
	for(int i=1; i<=n ;i++){
		cin >> a[i];
		guy[a[i]].push_back(i);
	}
	int frog=1000;
	vector<pair<int,int> >seq;
	for(int i=1; i<=n ;i++){
		if(guy[i].empty()) continue;
		if(guy[i].size()>=4){
			cout << "Case #" << rr << ": " << "No\n";
			return;
		}
		int mn=501;
		int mx=0;
		for(auto c:guy[i]){
			if(w[c]!=-1){
				mn=min(mn,w[c]);
				mx=max(mx,w[c]);
			}
		}
		if(mn>mx){
			for(auto c:guy[i]) w[c]=++frog;
			frog+=30;
		}
		else{
			gl[i]=mn;
			gr[i]=mx;
			seq.push_back({gl[i],i});
		}
	}
	sort(seq.begin(),seq.end());
	for(int i=1; i<=seq.size() ;i++){
		int col=seq[i-1].se;
		for(int j=0; j<=504 ;j++){
			dp[i][j]=1e9;
		}
		vector<int>know;
		for(auto c:guy[col]){
			if(w[c]!=-1) know.push_back(w[c]);
		}
		sort(know.begin(),know.end());
		if(guy[col].size()==2){
			if(know.size()==2){
				test2(i,know);
			}
			else{
				test2(i,{know[0]-1,know[0]});
				test2(i,{know[0],know[0]+1});
			}
		}
		else{
			if(know.size()==3){
				test3(i,know);
			}
			else if(know.size()==1){
				int k=know[0];
				test3(i,{k-2,k-1,k});
				test3(i,{k-1,k,k+1});
				test3(i,{k,k+1,k+2});
			}
			else{
				test3(i,{know[0]-1,know[0],know[1]});
				test3(i,{know[0],know[1],know[1]+1});
				funny(i,know);
			}
		}
		use.clear();
		for(int j=0; j<=504 ;j++){
			if(dp[i][j]!=1e9) use.insert(j);
		}
		if(use.empty()){
			cout << "Case #" << rr << ": " << "No\n";
			return;
		}
	}
	int haha=*use.begin();
	for(int i=seq.size() ;i>=1 ;i--){
		int col=seq[i-1].se;
		vector<int>ww=method[i][haha];
		set<int>s;
		for(auto c:ww) s.insert(c);
		for(auto c:guy[col]){
			if(w[c]!=-1) s.erase(w[c]);
		}
		for(auto c:guy[col]){
			if(w[c]==-1){
				w[c]=*s.begin();
				s.erase(w[c]);
			}
		}
		haha=prv[i][haha];	
	}
	cout << "Case #" << rr << ": " << "Yes\n";
	for(int i=1; i<=n ;i++){
		cout << w[i] << ' ';
	}
	cout << '\n';
}
int main(){
	ios::sync_with_stdio(false);cin.tie(0);
	freopen("jnput.txt","r",stdin);
	freopen("jutput.txt","w",stdout);
	int t;cin >> t;
	for(int i=1; i<=t ;i++){
		solve(i);
	}
}

